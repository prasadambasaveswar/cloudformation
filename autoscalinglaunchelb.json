{
  "Description": "MarkLogic on AWS - creates an EC2 Centos machine, EBS volume, static IP address, and deploys the Mark Logic on it.  **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings" : {

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-4bf3d731" },
      "us-east-2"      : { "64" : "ami-0b500ef59d8335eee" },
      "us-west-2"      : { "64" : "ami-a042f4d8" },
      "us-west-1"      : { "64" : "ami-65e0e305" }
    }
  },
    "Parameters": {
      "InstanceType" : {
        "Description" : "EC2 instance type",
        "Type" : "String",
        "Default" : "t2.micro",
        "AllowedValues" : [ "m1.medium","m1.large", "t2.micro", "t2.small", "t2.medium","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.medium","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge", "t2.micro"],
        "ConstraintDescription" : "Must be a valid EC2 instance type."
      },
     "SSHKeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
	"VPC": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::VPC::Id"
    },
	"VolumeSize": {
        "Description" : "The EBS Data volume size (GB) for all nodes",
        "Type": "Number",
		"Default": "10"
      },
	"NodesPerZone": {
    "Description": "Total number of nodes per Zone. Set to 0 to shutdown/hibernate",
    "Type": "Number",
    "MinValue": "1",
    "MaxValue": "5",
    "Default": "1"
    }, 
	"VolumeType": {
      "Description" : "The EBS Data volume Type",
      "Type": "String",
	  "Default": "gp2"
    },
	"SubnetId" : {
      "Type" : "List<AWS::EC2::Subnet::Id>",
      "Description" : "SubnetId of an existing subnet in your Virtual Private Cloud (VPC)"
    },
    "SecurityGroupId" : {
      "Type" : "List<AWS::EC2::SecurityGroup::Id>",
      "Description" : "The SecurityGroupId of an existing EC2 SecurityGroup in your Virtual Private Cloud (VPC)"
    }
    },
 "Resources": {
  "LaunchConfig": {
    "Type": "AWS::AutoScaling::LaunchConfiguration",
    "Properties": {
	  "AssociatePublicIpAddress" : "false",
      "BlockDeviceMappings": [
        {
          "DeviceName": "/dev/xvdf",
          "Ebs": { "VolumeSize" : { "Ref": "VolumeSize" }, "VolumeType" : { "Ref": "VolumeType" }, "Iops" : 100 } 
        }
      ],
      "KeyName": {"Ref": "SSHKeyName"},
      "ImageId": {
                    "Fn::FindInMap": [ "AWSRegionArch2AMI", { "Ref": "AWS::Region" }, "64"] },
      "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                        "#!/bin/bash -v\n",
                        "yum update -y\n",
                        "yum install -y java wget\n",
						"cd /home/ec2-user\n",
						"curl -s -S -O -XPOST -d'email=jmakeig@marklogic.com&pass=asdfasdf'  https://developer.marklogic.com/download/binaries/9.0/MarkLogic-9.0-9.x86_64.rpm\n",
						"yum install -y /home/ec2-user/MarkLogic-9.0-9.x86_64.rpm\n",
                        "systemctl enable MarkLogic\n",
						"/etc/init.d/MarkLogic start\n"
                ]]}
              },
      "SecurityGroups": [ { "Fn::Join": [",", {"Ref": "SecurityGroupId"} ] } ],
      "InstanceType": { "Ref": "InstanceType" }
    },
    "Metadata": {
      "AWS::CloudFormation::Designer": {
        "id": "2efb8cfb-df53-401d-8ff2-34af0dd25993"
      }
    }
  },
	"ServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
		"VPCZoneIdentifier": [ {"Fn::Join": [",", {"Ref": "SubnetId"} ] } ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "3",
        "DesiredCapacity": { "Ref": "NodesPerZone" },
		"Cooldown": "300",
		"HealthCheckType": "EC2",
		"HealthCheckGracePeriod": "300",
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ]
      }
	 },
"ElasticLoadBalancer": {
    "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
    "Properties": {
	"LBCookieStickinessPolicy": [
                 {
                        "PolicyName": "MLSession", 
                        "CookieExpirationPeriod": 60
                    }
      ],
      "SecurityGroups": [ {"Fn::Join": [",", {"Ref": "SecurityGroupId"} ] } ],
      "Subnets": [ {"Fn::Join": [",", {"Ref": "SubnetId"} ] } ],
      "ConnectionDrainingPolicy": {
        "Enabled": "true",
        "Timeout": "60"
      },
      "CrossZone": "true",
      "Listeners": [
        {
          "LoadBalancerPort": "8000",
          "InstancePort": "8000",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8001",
          "InstancePort": "8001",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8002",
          "InstancePort": "8002",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8003",
          "InstancePort": "8003",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8004",
          "InstancePort": "8004",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8005",
          "InstancePort": "8005",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8006",
          "InstancePort": "8006",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8007",
          "InstancePort": "8007",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        },
        {
          "LoadBalancerPort": "8008",
          "InstancePort": "8008",
          "Protocol": "HTTP",
          "PolicyNames": [
            "MLSession"
          ]
        }
      ],
      "HealthCheck": {
        "Target": "HTTP:7997/",
        "HealthyThreshold": "3",
        "UnhealthyThreshold": "10",
        "Interval": "30",
        "Timeout": "20"
      }
    }
  }
  },
	"Outputs": {
        "MarkLogicWebadmin" : {
            "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName"  ]}, ":8001" ]] },
            "Description" : "This is the address of your MarkLogic server web administration console."
          },
       "Note" :{
            "Value" : "It takes a few minutes for your EC2 machine to finish booting and start MarkLogic.  Coffee time?",
            "Description" : ""
        }
    }
}